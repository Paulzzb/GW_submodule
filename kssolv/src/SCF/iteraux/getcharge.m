function rho = getcharge(mol,X,occ)
% GETCHARGE calcuates the charge density.
%    rho = GETCHARGE(mol,X) calculates the charge density generated by X.
%
%    rho = GETCHARGE(mol,X,occ) calculates the charge density generated by
%    X together with the occupation rate occ.
%
%    rho = GETCHARGE(cry,BX) calculates the charge density generated by
%    the Bloch wave function BX.
%
%    rho = GETCHARGE(cry,BX,occs) calculates the charge density generated
%    by the Bloch wave function BX together with the occupation rate occs.
%
%   See also scf, dcm, trdcm.

%  Copyright (c) 2016-2017 Yingzhou Li and Chao Yang,
%                          Stanford University and Lawrence Berkeley
%                          National Laboratory
%  This file is distributed under the terms of the MIT License.

if (nargin == 2)
    occ = ones(1,sumel(ncols(X)));
elseif iscell(occ)
    occ = cell2mat(occ);
elseif length(occ) ==1
    nocc = occ;
    occ = zeros(1,ncols(X));
    occ(1:nocc) = 1;
else
    occ = occ(:)';
end

n1    = mol.n1;
n2    = mol.n2;
n3    = mol.n3;
n123  = n1*n2*n3;
nspin = mol.nspin;

if isa(mol,'Crystal')
    if nspin == 1
        rho = zeros(n123,1);
    elseif nspin == 2||nspin == 4
        rho = cell(nspin,1);
        for i = 1:nspin
            rho{i} = zeros(n123,1);
        end
    end
    nXcols = ncols(X);
    idx = 0;
    for ik = 1:mol.nkpts
        idx = idx(end)+(1:nXcols(ik));        
        if nspin == 1
            psir = ifft3(X{ik})*n123;
            rho = rho+mol.wks(ik)*sum(repmat(occ(idx),n123,1).*abs(psir).^2,2);
        elseif nspin == 2
            psir = ifft3(X{ik})*n123;
            rho{1} = rho{1}+mol.wks(ik)*sum(repmat(occ(idx),n123,1).*abs(psir).^2,2);
        elseif nspin == 4
            X_tmp = X{ik};
            npw = length(X_tmp.idxnz);
            Xup = Wavefun(X_tmp.psi(1:npw,:),X_tmp.n1,X_tmp.n2,X_tmp.n3,X_tmp.idxnz);
            Xdw = Wavefun(X_tmp.psi(npw+1:end,:),X_tmp.n1,X_tmp.n2,X_tmp.n3,X_tmp.idxnz);
            psiup = ifft3(Xup)*n123;
            psidw = ifft3(Xdw)*n123;

            r_psiup = real(psiup.psi);
            r_psidw = real(psidw.psi);
            i_psiup = imag(psiup.psi);
            i_psidw = imag(psidw.psi);
            
            rho{1} = rho{1} + mol.wks(ik)*sum((r_psiup.^2+i_psiup.^2+r_psidw.^2   ...
                        +i_psidw.^2).*repmat(occ(idx),n123,1),2);
            if mol.domag
                rho{2} = rho{2} + mol.wks(ik)*2*sum((r_psiup.*r_psidw+i_psiup         ...
                            .*i_psidw).*repmat(occ(idx),n123,1),2);
                rho{3} = rho{3} + mol.wks(ik)*2*sum((r_psiup.*i_psidw-i_psiup         ...
                            .*r_psidw).*repmat(occ(idx),n123,1),2);
                rho{4} = rho{4} + mol.wks(ik)*sum((r_psiup.^2+i_psiup.^2-r_psidw.^2   ...
                            -i_psidw.^2).*repmat(occ(idx),n123,1),2);
            end                
        end
    end
    
    if nspin == 2
        for ik = mol.nkpts+1:mol.nkpts*2
            idx = idx(end)+(1:nXcols(ik));
            psir = ifft3(X{ik})*n123;
            rho{2} = rho{2}+mol.wks(ik)*sum(repmat(occ(idx),n123,1).*abs(psir).^2,2);
        end
    end
else
    if nspin == 1
        psir = ifft3(X)*n123;
        rho = sum(repmat(occ,n123,1).*abs(psir).^2,2);
    elseif nspin == 2
        rho = cell(2,1);
        for i = 1:2
            psir = ifft3(X{i})*n123;
            rho{i} = sum(repmat(occ((1:mol.nbnd)+(i-1)*mol.nbnd),n123,1).*abs(psir).^2,2);
        end
    elseif nspin == 4
        rho = cell(4,1);
        npw = length(X.idxnz);
        Xup = Wavefun(X.psi(1:npw,:),X.n1,X.n2,X.n3,X.idxnz);
        Xdw = Wavefun(X.psi(npw+1:end,:),X.n1,X.n2,X.n3,X.idxnz);
        psiup = ifft3(Xup)*n123;
        psidw = ifft3(Xdw)*n123;
        
        r_psiup = real(psiup.psi);
        r_psidw = real(psidw.psi);
        i_psiup = imag(psiup.psi);
        i_psidw = imag(psidw.psi);

        rho{1} = sum((r_psiup.^2+i_psiup.^2+r_psidw.^2   ...
                    +i_psidw.^2).*repmat(occ,n123,1),2);
        if mol.domag
            rho{2} = 2*sum((r_psiup.*r_psidw+i_psiup         ...
                        .*i_psidw).*repmat(occ,n123,1),2);
            rho{3} = 2*sum((r_psiup.*i_psidw-i_psiup         ...
                        .*r_psidw).*repmat(occ,n123,1),2);
            rho{4} = sum((r_psiup.^2+i_psiup.^2-r_psidw.^2   ...
                        -i_psidw.^2).*repmat(occ,n123,1),2);
        else
            for i = 2:4
                rho{i} = zeros(n123,1);
            end
        end
    end
end

if nspin == 1
    rho = reshape((2/nspin)*rho/mol.vol,n1,n2,n3);
elseif nspin == 2||mol.nspin == 4
    for i = 1:nspin
        rho{i} = reshape(rho{i}/mol.vol,n1,n2,n3);
    end
end
end
